{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwaywest",
        "norwayeast",
        "brazilsoutheast",
        "westus3"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob-3"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "blob-conn"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Get_blob_content_using_path_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/GetFileContentByPath",
                "queries": {
                  "path": "@triggerBody()?['Path']",
                  "queryParametersSingleEncoded": true,
                  "inferContentType": true
                }
              },
              "runAfter": {}
            },
            "Initialize_variable_InputMsg": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InputMsg",
                    "type": "string",
                    "value": "@{body('Get_blob_content_using_path_(V2)')}"
                  }
                ]
              },
              "runAfter": {
                "Get_blob_content_using_path_(V2)": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_InputMsgJson": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InputMsgJson",
                    "type": "string",
                    "value": "@{replace(variables('InputMsgFormat'),'\\u0022','\"')}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_InputMsgFormat": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_InputMsgFormat": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InputMsgFormat",
                    "type": "string",
                    "value": "@{replace(variables('InputMsg'),'\"','')}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_InputMsg": [
                  "Succeeded"
                ]
              }
            },
            "Parse_InputMsg_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@variables('InputMsgJson')",
                "schema": {}
              },
              "runAfter": {
                "Initialize_variable_InputMsgJson": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_SpecialCharacter": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "SpecialCharacter",
                    "type": "array",
                    "value": "@createArray('@','$','+','%','&')"
                  }
                ]
              },
              "runAfter": {
                "Parse_InputMsg_JSON": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Parse_InputMsg_JSON')",
                      ""
                    ]
                  }
                ]
              },
              "actions": {},
              "runAfter": {
                "Initialize_variable_SpecialCharacter": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/triggers/batch/onupdatedfile",
                "queries": {
                  "folderId": "JTJmZm1zLWNvbnQ=",
                  "checkBothCreatedAndModifiedDateTime": false,
                  "maxFileCount": 10
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 3
              },
              "metadata": {
                "JTJmZm1zLWNvbnQ=": "/fms-cont"
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]"
        }
      }
    }
  ],
  "outputs": {}
}